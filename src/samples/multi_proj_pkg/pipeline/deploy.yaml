trigger:
- main  # Trigger the pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: BuildAndPublish
  displayName: 'Build, Test, and Publish Python Wheel'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'  # Specify the Python version to use
      addToPath: true

  - script: |
      python -m pip install --upgrade pip
      pip install wheel
      # pip install -r requirements.txt  # Install project dependencies
    displayName: 'Install Python and Dependencies'

  - script: |
      cd src/samples/multi_proj_pkg
      python setup.py bdist_wheel  # Build the wheel file
    displayName: 'Build Wheel'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **/*
        !.git/**/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@0
    displayName: 'Publish pipeline artifact'
    inputs:
      artifactName: 'drop'
      targetPath: '$(Build.ArtifactStagingDirectory)'

- job: DownloadAndTest
  displayName: 'Download and Test Wheel'
  dependsOn: BuildAndPublish
  steps:
  - download: current
    artifact: drop

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: |
      python -m pip install --upgrade pip
      cd src/samples/multi_proj_pkg
      pip install check-wheel-contents
      check-wheel-contents dist/
    displayName: 'Test Wheel'

- job: PublishToArtifactFeed
  displayName: 'Publish to Azure Artifact Feed'
  dependsOn: DownloadAndTest
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: |
      echo "Structure of work folder of this pipeline:"
      tree $(Agent.WorkFolder)/1

      echo "Build.ArtifactStagingDirectory:" 
      echo "$(Build.ArtifactStagingDirectory)"

      echo "Build.SourcesDirectory:"
      echo "$(Build.SourcesDirectory)"
    displayName: 'Display agent folder contents'

  # - script: |
  #     cd $(Agent.WorkFolder)/1/s/src/samples/multi_proj_pkg/dist
  #     python -m pip install --upgrade pip
  #     pip install twine
  #     twine upload --repository-url https://pkgs.dev.azure.com/kimstrad/_packaging/kmdata/pypi/upload/ multi_proj_pkg-*.whl  # Upload wheel to Azure Artifact feed
  #   displayName: 'Publish to Artifact Feed'

  - task: TwineAuthenticate@1
    inputs:
      artifactFeed: kimstrad/kmdata
    displayName: 'Authenticate Twine'

  - script: |
      cd $(Agent.WorkFolder)/1/s/src/samples/multi_proj_pkg
      python -m pip install --upgrade pip
      pip install twine keyring artifacts-keyring
      python -m pip install --upgrade build setuptools twine
      python -m twine upload -r insite-packages --repository-url https://pkgs.dev.azure.com/kimstrad/_packaging/kmdata/pypi/upload/ --config-file $(PYPIRC_PATH) dist/*.whl
  
    displayName: 'Publish to Artifact Feed'

